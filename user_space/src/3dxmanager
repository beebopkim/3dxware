#!/usr/bin/perl
#    GNU Public License (GPL)
#
#    Copyright (c) 2008 St√©phane GALLAND <galland@arakhne.org>
#
#    This program is free software; you can redistribute it and/or modify it
#    under the terms of the GNU General Public License as published by the
#    Free Software Foundation; either version 2 of the License, or (at your
#    option) any later version.
#
#    This program is distributed in the hope that it will be useful, but
#    WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General
#    Public License for more details.
#
#    You should have received a copy of the GNU General Public License along
#    with this program; see the file COPYING. If not, write to the Free
#    Software Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA
#    02111-1307, USA.

use strict;

use constant VERSION => '<<VERSION_NUMBER>>';

use constant RUN_DIR => '<<RUNNING_DIR>>';
use constant SERVER_CMD => '<<3DXSRV_BINARY>>';

use constant TRUE => 1;
use constant FALSE => 0;
use constant ACTION_FILE => RUN_DIR.'/actions';
use constant PID_FILE => RUN_DIR.'/3dxsrv.pid';
use constant CMD_QUIT => 'quit';
use constant CMD_START => 'start';
use constant CMD_STOP => 'stop';

use Getopt::Long;

sub usage() {
	print STDERR "usage: $0 [--nowait|-wait] [--version] [-v] {start|stop|quit}\n";
	exit(1);
}

sub checkAction() {
	return (-d RUN_DIR && -p ACTION_FILE);
}

sub doAction($) {
	my $action = shift;
	local *FILE;
	open(*FILE, ">> ".ACTION_FILE) or die(ACTION_FILE.": $!\n");
	print FILE "$action\n";
	close(*FILE);
}

sub waitServerStart() {
	while (! -e PID_FILE) {
		# do nothing
	}
}

sub waitServerStop() {
	while (-e PID_FILE) {
		# do nothing
	}
}

my $optWait = 1;
my $optVersion;
my $verbose;

if (!GetOptions('wait!' => \$optWait,
		'version' => \$optVersion,
		'v' => \$verbose)) {
	usage();
}

if ($optVersion) {
	system(SERVER_CMD,'-v');
	print "Ubuntu/Debian extension = V".VERSION."\n";
	exit(0);
}

my $action = undef;
for my $param (@ARGV) {
	if ($param eq 'start' || $param eq 'stop' || $param eq 'quit') {
		$action = $param;
	}
	else {
		$action = undef;
	}
}

usage() unless ($action);

if (checkAction()) {

	if ($action eq 'start') {
		doAction(CMD_START);
		waitServerStart() if ($optWait);
	}
	elsif ($action eq 'stop') {
		doAction(CMD_STOP);
		waitServerStop() if ($optWait);
	}
	elsif ($action eq 'quit') {
		doAction(CMD_QUIT);
		waitServerStop() if ($optWait);
	}

}
elsif ($verbose) {
	print STDERR "3DxWare daemon was not launched\n";
	exit(1);
}

exit(0);
