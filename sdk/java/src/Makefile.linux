export BASEPREFIX = /usr
export PREFIX = ${BASEPREFIX}
export DEBUG=0
export PLATFORM = LINUX
export SHELL := /bin/bash
export VERSION := ${shell cat ../../../VERSION}
export ARCH := $(shell getconf LONG_BIT)

dirname = $(patsubst %/,%, $(dir $1))
toclass = $(subst /,.,$(patsubst ./%,%,$(basename $1)))

ifeq ("${JAVA_HOME}","")
	JAVAH = $(realpath /usr/bin/javah)
	JAVAC = $(realpath /usr/bin/javac)
	JAR = $(realpath /usr/bin/jar)
	JAVA_ROOT_DIR = $(call dirname, $(call dirname, ${JAVAH}))
else
	JAVAH = $(realpath ${JAVA_HOME}/bin/javah)
	JAVAC = $(realpath ${JAVA_HOME}/bin/javac)
	JAR = $(realpath ${JAVA_HOME}/bin/jar)
	JAVA_ROOT_DIR = ${JAVA_HOME}
endif

JAVA_SRC_ROOT = .
JAVA_OUTPUT_DIR = ./build
CLASSPATH = ${JAVA_OUTPUT_DIR}:${JAVA_SRC_ROOT}:
PACKAGABLE_FILES = ../../../VERSION ../../../AUTHORS ../../../COPYING ../../../README
S_JAVA_SRC_FILES = $(shell cd "${JAVA_SRC_ROOT}"; find . -name "*.java")
JAVA_SRC_FILES = $(shell find "${JAVA_SRC_ROOT}" -name "*.java")
S_JAVA_RESOURCE_FILES = $(shell cd "${JAVA_SRC_ROOT}"; find . -name "*.properties" -o -name "*.png" -o -name "*.jpg")
JAVA_RESOURCE_FILES = $(shell find "${JAVA_SRC_ROOT}" -name "*.properties" -o -name "*.png" -o -name "*.jpg")
JNI_INCLUDE_PATHS = $(shell find ${JAVA_ROOT_DIR}/include -type d -printf '%p:')

ifeq ("${ARCH}", "64")
	JAVA_ARCH:=amd64
else
	JAVA_ARCH:=i386
endif

DXWARE_NATIVE_PATH = ../../cpp
DXWARE_INCLUDE_PATH = ${DXWARE_NATIVE_PATH}/include
DXWARE_LIB_PATH = ${DXWARE_NATIVE_PATH}/src

OBJS =  JNIDriver.o JNIXlibBinder.o

LIBS := -L${JAVA_ROOT_DIR}/jre/lib/${JAVA_ARCH} -L${DXWARE_LIB_PATH} -L. -lX11 -lm -l3dxware -ljawt
FLAGS := -I${DXWARE_INCLUDE_PATH} $(patsubst %,-I%,$(subst :, ,$(JNI_INCLUDE_PATHS))) "-DMAGELLAN_VERSION=${VERSION}" -DX11 -D${PLATFORM} -Wall -Werror -ansi -pedantic -fPIC

ifeq ("${DEBUG}","1")
	override FLAGS += -DDEBUG
endif

override CFLAGS += ${FLAGS}
override CXXFLAGS += ${FLAGS}

all: jar jni exec

jni: lib3dxware-jni.so

jar: 3dxware.jar

exec: j3dxtest.sh j3dxdbg.sh 3dxdbg.sh

j3dxtest.sh:
	@echo "#!/bin/sh" > j3dxtest.sh
	@echo "export LD_LIBRARY_PATH=\"$$LD_LIBRARY_PATH:${BASEPREFIX}/lib/jni\"" >> j3dxtest.sh
	@echo "exec java -cp \"${BASEPREFIX}/share/java/3dxware.jar:\" org.arakhne.dxware.test.SpaceMouseTest" >> j3dxtest.sh
	@chmod +x j3dxtest.sh

j3dxdbg.sh:
	@echo "#!/bin/sh" > j3dxdbg.sh
	@echo "export LD_LIBRARY_PATH=\"$$LD_LIBRARY_PATH:.:${DXWARE_LIB_PATH}\"" >> j3dxdbg.sh
	@echo "exec java -cp \"./3dxware.jar:\" org.arakhne.dxware.test.SpaceMouseTest" >> j3dxdbg.sh
	@chmod +x j3dxdbg.sh

3dxdbg.sh:
	@echo "#!/bin/sh" > 3dxdbg.sh
	@echo "export LD_LIBRARY_PATH=\"$$LD_LIBRARY_PATH:.:${DXWARE_LIB_PATH}\"" >> 3dxdbg.sh
	@echo "exec ../../cpp/src/3dxtest" >> 3dxdbg.sh
	@chmod +x 3dxdbg.sh

3dxware.jar: ${JAVA_SRC_FILES} ${B_JAVA_RESOURCE_FILES} ${PACKAGABLE_FILES}
	@mkdir -p "${JAVA_OUTPUT_DIR}"
	@for FILE in ${PACKAGABLE_FILES}; \
	do \
		cp -vf $$FILE "${JAVA_OUTPUT_DIR}/"; \
	done; \
	for FILE in ${S_JAVA_RESOURCE_FILES}; \
	do \
		mkdir -p "${JAVA_OUTPUT_DIR}/`dirname $$FILE`"; \
		cp -vf "${JAVA_SRC_ROOT}/$$FILE" "${JAVA_OUTPUT_DIR}/$$FILE"; \
	done; \
	${JAVAC} -d "${JAVA_OUTPUT_DIR}" -classpath "${CLASSPATH}" ${JAVA_SRC_FILES}; \
	cd "${JAVA_OUTPUT_DIR}"; ${JAR} cvf ../$@ .

lib3dxware-jni.so: ${OBJS}
	${CXX} ${CXXFLAGS} -shared -o $@ $^ ${LIBS}

JNIDriver.h: ${JAVA_SRC_ROOT}/org/arakhne/dxware/Driver.java
	@${JAVAH} -classpath "${CLASSPATH}" -o ./JNIDriver.h org.arakhne.dxware.Driver
	@${JAVAH} -stubs -classpath "${CLASSPATH}" -o ./JNIDriver.stubs org.arakhne.dxware.Driver

JNIDriver.o: JNIDriver.cpp JNIDriver.h
	${CXX} ${CXXFLAGS} -o $@ -c $<

JNIXlibBinder.o: JNIXlibBinder.cpp JNIBinder.h
	${CXX} ${CXXFLAGS} -o $@ -c $<

clean:
	${RM} *.o *~ *.bak *.log *.so *.jar *.stubs
	${RM} -r "${JAVA_OUTPUT_DIR}"
	${RM} JNIDriver.h j3dxtest.sh j3dxdbg.sh 3dxdbg.sh
	${RM} `find -name "*.class"`

install:
	install -d "${PREFIX}/lib/jni"
	install ./lib3dxware-jni.so "${PREFIX}/lib/jni/lib3dxware-jni.so.${VERSION}"
	ln -fs "./lib3dxware-jni.so.${VERSION}" "${PREFIX}/lib/jni/lib3dxware-jni.so"
	install -d "${PREFIX}/share/java"
	install ./3dxware.jar "${PREFIX}/share/java/3dxware-${VERSION}.jar"
	ln -fs "./3dxware-${VERSION}.jar" "${PREFIX}/share/java/3dxware.jar"
	install -d "${PREFIX}/bin"
	install -m 0755 ./j3dxtest.sh "${PREFIX}/bin/j3dxtest"

info:
	@echo "Version: ${VERSION}"
	@echo "Libs: ${LIBS}"
	@echo "Flags: ${FLAGS}"
	@echo "Java source root: ${JAVA_SRC_ROOT}"
	@echo "javac: ${JAVAC}"
	@echo "jar: ${JAR}"
	@echo "javah: ${JAVAH}"
	@echo "Java root directory: ${JAVA_ROOT_DIR}"
	@echo "JNI include paths: ${JNI_INCLUDE_PATHS}"
	@echo "Java source files: ${JAVA_SRC_FILES}"
	@echo "Java resource files: ${JAVA_RESOURCE_FILES}"
	@echo "Architecture: ${ARCH}"
	@echo "Java Architecture: ${JAVA_ARCH}"

